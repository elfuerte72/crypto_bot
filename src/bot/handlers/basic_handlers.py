"""Basic command handlers for the crypto bot.

This module provides handlers for essential commands like /start and /help.
"""

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from config.settings import Settings


def create_basic_router() -> Router:
    """Create and configure basic handlers router.

    Returns:
        Configured router with basic handlers
    """
    router = Router(name="basic_handlers")

    @router.message(Command("start"))
    async def cmd_start(message: Message, settings: Settings) -> None:
        """Handle /start command - welcome message."""
        user_name = message.from_user.first_name if message.from_user else "–¥—Ä—É–≥"

        welcome_text = f"""
üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Crypto Bot, {user_name}!</b>

üí± –Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Å—É–º–º—ã –¥–ª—è –æ–±–º–µ–Ω–∞.

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/rate - üí± –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã
/calc - üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º—É –æ–±–º–µ–Ω–∞
/help - ‚ùì –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

<b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã:</b>
{_format_supported_pairs(settings)}

–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –µ—ë –≤—Ä—É—á–Ω—É—é! üëÜ
        """.strip()

        await message.answer(welcome_text)

    @router.message(Command("help"))
    async def cmd_help(message: Message, settings: Settings) -> None:
        """Handle /help command - show help information."""
        help_text = f"""
‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º</b>

<b>üí± /rate</b> - –ü–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å —Å —É—á–µ—Ç–æ–º –Ω–∞—Ü–µ–Ω–∫–∏. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –∏–∑
–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.

<b>üßÆ /calc</b> - –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º—É –æ–±–º–µ–Ω–∞
–ü–æ–º–æ–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É –¥–ª—è –æ–±–º–µ–Ω–∞ —Å —É—á–µ—Ç–æ–º –Ω–∞—Ü–µ–Ω–∫–∏ –∏ –∫–æ–º–∏—Å—Å–∏–π.

<b>üöÄ /start</b> - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

<b>‚ùì /help</b> - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.

<b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã:</b>
{_format_supported_pairs(settings)}

<b>‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –ö—É—Ä—Å—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –ù–∞—Ü–µ–Ω–∫–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
‚Ä¢ –í—Å–µ —Ä–∞—Å—á–µ—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è —Å –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
        """.strip()

        await message.answer(help_text)

    return router


def _format_supported_pairs(settings: Settings) -> str:
    """Format supported currency pairs for display."""
    pairs = settings.supported_pairs_list
    if not pairs:
        return "–í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

    # Group pairs by base currency for better readability
    grouped = {}
    for pair in pairs:
        if "/" in pair:
            base, quote = pair.split("/")
            if base not in grouped:
                grouped[base] = []
            grouped[base].append(quote)

    if not grouped:
        return "–í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

    formatted_lines = []
    for base, quotes in grouped.items():
        quotes_str = ", ".join(quotes)
        formatted_lines.append(f"‚Ä¢ <b>{base}</b>: {quotes_str}")

    return "\n".join(formatted_lines)
