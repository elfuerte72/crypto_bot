version: "3.8"

services:
  crypto-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: crypto-bot:latest
    container_name: crypto-bot
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs:rw
      - ./data:/app/data:rw
    networks:
      - crypto-bot-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import sys; from src.config.settings import Settings; sys.exit(0 if Settings() else 1)",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  crypto-bot-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: crypto-bot:dev
    container_name: crypto-bot-dev
    restart: "no"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app:rw
      - ./logs:/app/logs:rw
      - ./data:/app/data:rw
    networks:
      - crypto-bot-network
    profiles:
      - dev
    ports:
      - "8080:8080"

  redis:
    image: redis:7-alpine
    container_name: crypto-bot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - crypto-bot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.25"
        reservations:
          memory: 128M
          cpus: "0.1"

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: crypto-bot-redis-ui
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - crypto-bot-network
    profiles:
      - debug
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.1"

  prometheus:
    image: prom/prometheus:latest
    container_name: crypto-bot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-lifecycle"
    networks:
      - crypto-bot-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: crypto-bot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - crypto-bot-network
    profiles:
      - monitoring

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  crypto-bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
